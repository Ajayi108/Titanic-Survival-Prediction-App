stages:
  - build

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  REGISTRY: $CI_REGISTRY
  PROJECT_PATH: $CI_PROJECT_PATH

.build_template: &build_template
  stage: build
  image: docker:24.0
  services:
    - docker:24.0-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

build-web-frontend:
  <<: *build_template
  script:
    - cd web-frontend
    - docker build -t $REGISTRY/$PROJECT_PATH/web-frontend:$CI_COMMIT_SHA .
    - docker build -t $REGISTRY/$PROJECT_PATH/web-frontend:latest .
    - docker push $REGISTRY/$PROJECT_PATH/web-frontend:$CI_COMMIT_SHA
    - docker push $REGISTRY/$PROJECT_PATH/web-frontend:latest

build-web-backend:
  <<: *build_template
  script:
    - cd web-backend
    - docker build -t $REGISTRY/$PROJECT_PATH/web-backend:$CI_COMMIT_SHA .
    - docker build -t $REGISTRY/$PROJECT_PATH/web-backend:latest .
    - docker push $REGISTRY/$PROJECT_PATH/web-backend:$CI_COMMIT_SHA
    - docker push $REGISTRY/$PROJECT_PATH/web-backend:latest


build-model-backend:
  <<: *build_template
  script:
    - cd model-backend
    - docker build -t $REGISTRY/$PROJECT_PATH/model-backend:$CI_COMMIT_SHA .
    - docker build -t $REGISTRY/$PROJECT_PATH/model-backend:latest .
    - docker push $REGISTRY/$PROJECT_PATH/model-backend:$CI_COMMIT_SHA
    - docker push $REGISTRY/$PROJECT_PATH/model-backend:latest